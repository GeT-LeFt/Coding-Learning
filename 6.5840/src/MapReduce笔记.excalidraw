{
  "type": "excalidraw",
  "version": 2,
  "source": "vscode-webview://1lejgmb3sba2jl1gbhrka2a54tfp6mo8ersmaqe6mbjjelan3i85",
  "elements": [
    {
      "type": "rectangle",
      "version": 1183,
      "versionNonce": 1964722552,
      "isDeleted": false,
      "id": "FU24bC1TTgZhV4xuFa0nR",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 831.3519525359619,
      "y": 184.4705670058326,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 191.90002441406253,
      "height": 82.49999999999999,
      "seed": 544575656,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "txDm7PpyT3-75RarXVdLA"
        },
        {
          "id": "Hnn3rW5uRaISfJWBeNUsN",
          "type": "arrow"
        },
        {
          "id": "ezEf3RBbG0yLaO1DrIsKg",
          "type": "arrow"
        },
        {
          "id": "3MK411stbJNhUxLP3imxH",
          "type": "arrow"
        }
      ],
      "updated": 1706971533387,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 983,
      "versionNonce": 1949444616,
      "isDeleted": false,
      "id": "txDm7PpyT3-75RarXVdLA",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 867.1920175384033,
      "y": 213.2205670058326,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 120.21989440917969,
      "height": 24,
      "seed": 1672354219,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1706971533387,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "coordinator ",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "FU24bC1TTgZhV4xuFa0nR",
      "originalText": "coordinator "
    },
    {
      "type": "rectangle",
      "version": 112,
      "versionNonce": 1055087224,
      "isDeleted": false,
      "id": "Q_Fpou4G4_P9v1qJzIM9a",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 573.5,
      "y": 417,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 193,
      "height": 85,
      "seed": 1810395595,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "PBq7lSzFefRWdl7V9gYbs"
        },
        {
          "id": "Hnn3rW5uRaISfJWBeNUsN",
          "type": "arrow"
        }
      ],
      "updated": 1706971533387,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 55,
      "versionNonce": 393193736,
      "isDeleted": false,
      "id": "PBq7lSzFefRWdl7V9gYbs",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 639.4300308227539,
      "y": 447,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 61.13993835449219,
      "height": 24,
      "seed": 650919915,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1706971533387,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "worker",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "Q_Fpou4G4_P9v1qJzIM9a",
      "originalText": "worker"
    },
    {
      "type": "rectangle",
      "version": 195,
      "versionNonce": 394349432,
      "isDeleted": false,
      "id": "oFnJu2hQRjBCKTs1w3G_w",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 831.5,
      "y": 414.5,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 193,
      "height": 85,
      "seed": 1043984907,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "v9t9G8anqe-OgQDSlfRMi"
        },
        {
          "id": "3MK411stbJNhUxLP3imxH",
          "type": "arrow"
        }
      ],
      "updated": 1706971533387,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 138,
      "versionNonce": 346376200,
      "isDeleted": false,
      "id": "v9t9G8anqe-OgQDSlfRMi",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 897.4300308227539,
      "y": 444.5,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 61.13993835449219,
      "height": 24,
      "seed": 2112190635,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1706971533387,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "worker",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "oFnJu2hQRjBCKTs1w3G_w",
      "originalText": "worker"
    },
    {
      "type": "rectangle",
      "version": 230,
      "versionNonce": 1765350520,
      "isDeleted": false,
      "id": "vtiY7Xc9zV8lOgxrBziCC",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1088.5,
      "y": 418,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 193,
      "height": 85,
      "seed": 917909445,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "type": "text",
          "id": "FycuzzzUhB3bLF4_uxAgF"
        },
        {
          "id": "Spa2GrBX3kLsufnpgb-d5",
          "type": "arrow"
        },
        {
          "id": "ezEf3RBbG0yLaO1DrIsKg",
          "type": "arrow"
        }
      ],
      "updated": 1706971533387,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 172,
      "versionNonce": 936314632,
      "isDeleted": false,
      "id": "FycuzzzUhB3bLF4_uxAgF",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1154.430030822754,
      "y": 448,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 61.13993835449219,
      "height": 24,
      "seed": 1581641509,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1706971533387,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "worker",
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "vtiY7Xc9zV8lOgxrBziCC",
      "originalText": "worker"
    },
    {
      "type": "arrow",
      "version": 1340,
      "versionNonce": 902745464,
      "isDeleted": false,
      "id": "Hnn3rW5uRaISfJWBeNUsN",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 662.0337462301363,
      "y": 416,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 191.40615684893407,
      "height": 146.89181652365022,
      "seed": 71742251,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "boundElements": [
        {
          "type": "text",
          "id": "wc7PjzTfatUmyCWaeu6NB"
        }
      ],
      "updated": 1706971533387,
      "link": null,
      "locked": false,
      "startBinding": {
        "elementId": "Q_Fpou4G4_P9v1qJzIM9a",
        "focus": -0.42475247121028287,
        "gap": 1
      },
      "endBinding": {
        "elementId": "FU24bC1TTgZhV4xuFa0nR",
        "focus": 0.11573903879822564,
        "gap": 2.137616470517173
      },
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          191.40615684893407,
          -146.89181652365022
        ]
      ]
    },
    {
      "id": "wc7PjzTfatUmyCWaeu6NB",
      "type": "text",
      "x": 737.9068380823378,
      "y": 330.55409173817486,
      "width": 39.65997314453125,
      "height": 24,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1728651128,
      "version": 8,
      "versionNonce": 1835591176,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1706971533387,
      "link": null,
      "locked": false,
      "text": "RPC",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "Hnn3rW5uRaISfJWBeNUsN",
      "originalText": "RPC"
    },
    {
      "type": "arrow",
      "version": 1260,
      "versionNonce": 646340216,
      "isDeleted": false,
      "id": "ezEf3RBbG0yLaO1DrIsKg",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1188.3533057332006,
      "y": 415.3302329340667,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 177.2081434441859,
      "height": 146.54892051336424,
      "seed": 1896404459,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "boundElements": [
        {
          "type": "text",
          "id": "xtyOZ0tAaoZkDeuxTiFk6"
        }
      ],
      "updated": 1706971533387,
      "link": null,
      "locked": false,
      "startBinding": {
        "elementId": "vtiY7Xc9zV8lOgxrBziCC",
        "focus": 0.39104023929881565,
        "gap": 2.6697670659332857
      },
      "endBinding": {
        "elementId": "FU24bC1TTgZhV4xuFa0nR",
        "focus": -0.21788265975079465,
        "gap": 1.8107454148698707
      },
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          -177.2081434441859,
          -146.54892051336424
        ]
      ]
    },
    {
      "id": "xtyOZ0tAaoZkDeuxTiFk6",
      "type": "text",
      "x": 1079.919247438842,
      "y": 330.0557726773846,
      "width": 39.65997314453125,
      "height": 24,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 511212664,
      "version": 8,
      "versionNonce": 846128392,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1706971533387,
      "link": null,
      "locked": false,
      "text": "RPC",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "ezEf3RBbG0yLaO1DrIsKg",
      "originalText": "RPC"
    },
    {
      "type": "arrow",
      "version": 1155,
      "versionNonce": 472108920,
      "isDeleted": false,
      "id": "3MK411stbJNhUxLP3imxH",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 926.8889673201221,
      "y": 411.37197618252793,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 0.3500759969649607,
      "height": 142.27338535922314,
      "seed": 707069349,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "boundElements": [
        {
          "type": "text",
          "id": "U3_YltdpwbWK_KSkUIvEK"
        }
      ],
      "updated": 1706971533387,
      "link": null,
      "locked": false,
      "startBinding": {
        "elementId": "oFnJu2hQRjBCKTs1w3G_w",
        "focus": -0.012657902067039775,
        "gap": 3.128023817472126
      },
      "endBinding": {
        "elementId": "FU24bC1TTgZhV4xuFa0nR",
        "focus": -0.00045615067448188587,
        "gap": 2.128023817472183
      },
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          0.3500759969649607,
          -142.27338535922314
        ]
      ]
    },
    {
      "id": "U3_YltdpwbWK_KSkUIvEK",
      "type": "text",
      "x": 907.234018746339,
      "y": 328.23528350291633,
      "width": 39.65997314453125,
      "height": 24,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 28978184,
      "version": 8,
      "versionNonce": 73204744,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1706971533387,
      "link": null,
      "locked": false,
      "text": "RPC",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "3MK411stbJNhUxLP3imxH",
      "originalText": "RPC"
    },
    {
      "type": "text",
      "version": 450,
      "versionNonce": 1734451720,
      "isDeleted": false,
      "id": "_IH4OKQUWWyV2qa71wed2",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 312,
      "y": 423.2994888951909,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 172.59988403320312,
      "height": 96,
      "seed": 154681963,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1706971533387,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "1. Ask for a task\n2. Read file\n3. Execute\n4. Write output",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "1. Ask for a task\n2. Read file\n3. Execute\n4. Write output"
    },
    {
      "type": "text",
      "version": 493,
      "versionNonce": 1710235912,
      "isDeleted": false,
      "id": "JbtxKeJy9QFiqh1Kx8cSM",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 311,
      "y": 172.5,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 207.77981567382812,
      "height": 192,
      "seed": 1535212587,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1706971533387,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "\"main\" routine:\nmain/mrcoordinator.go\nmain/mrworker.go\n\n实现文件 :\nmr/coordinator.go\nmr/worker.go\nmr/rpc.go",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "\"main\" routine:\nmain/mrcoordinator.go\nmain/mrworker.go\n\n实现文件 :\nmr/coordinator.go\nmr/worker.go\nmr/rpc.go"
    },
    {
      "type": "text",
      "version": 1384,
      "versionNonce": 1231311736,
      "isDeleted": false,
      "id": "xA6s5q-Ux5ZJdVU4No1Ai",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 316.8893196965448,
      "y": 537.5372685165071,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 1160.099853515625,
      "height": 672,
      "seed": 1504389645,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1706971533387,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "官方步骤:\n1. 修改 `mr/worker.go's` 和 `Worker()` to send an RPC to the coordinator 来请求任务\n2. 然后修改coordinator，以尚未启动的 Map 任务的文件名作为回应\n3. 修改 Worker，读取该文件并调用应用程序的 Map 函数，就像 mrsequential.go 中那样\n\n提示：\n1. 改变了mr/目录的话，需要 go build -buildmode=plugin ../mrapps/wc.go \n2. intermediate file命名可以为 mr-X-Y (X是Map task，Y是Reduce task)\n3. 在worker.go中，Map可以用ihash(key)来pick reduce task\n4. mrsequential.go中有如何读Map input file，给intermediate K/V排序，存储Reduce结果\n5. coordinator作为RPC服务器，是并发的，记得锁定共享数据\n6. Workers有时需要等待，因为上一个map结束了reduce才能开始，可能的方法：1) worker定期向coordinator要任务，\n   每次请求之间用 time.Sleep()休眠；2) coordinator中的相关 RPC 处理程序可以使用 time.Sleep() 或 sync.Cond 循环等待。\n7. coordinator无法可靠地区分崩溃的Workers、存活但因故停滞的Workers，以及正在执行但速度太慢而无用的Workers。\n   最好的办法就是让coordinator等待一段时间，然后放弃并将任务重新分配给不同的Workers。在本实验中，\n   让coordinator等待十秒钟；十秒钟后，coordinator应假定Workers已经死亡（当然，也可能没有死亡）。 \n8. 如果您选择执行备份任务（第 3.6 节），请注意我们会测试您的代码是否会在工作者执行任务而不崩溃的情况下\n   安排无关的任务。备份任务只能在一段相对较长的时间（如 10 秒）后安排。\n9. 要测试崩溃恢复，可以使用 mrapps/crash.go 应用程序插件。它会在 Map 和 Reduce 功能中随机退出。\n10. 为了确保没有人会在崩溃时观察到部分写入的文件，MapReduce 论文提到了使用临时文件并在完全写\n   入后原子重命名的技巧。您可以使用 ioutil.TempFile 创建临时文件，并使用 os.Rename 原子重命名临时文件。\n11. test-mr.sh 的所有进程都在 mr-tmp 子目录下运行，因此如果出现问题，需要查看中间文件或输出文件时，\n   可在该目录下查看。请不要同时运行多个 test-mr.sh，使其在测试失败后退出，这样脚本就不会继续测试（并覆盖输出文件）。\n12. Go RPC 只发送名称以大写字母开头的结构体字段。子结构的字段名也必须大写。\n13. 调用 RPC call() 函数时，回复结构应包含所有默认值。RPC 调用应如下所示：\n     reply := SomeType{}\n     call(..., &reply)\n    调用前无需设置 reply 的任何字段。如果您传递的 reply 结构包含非默认字段，RPC 系统可能会无声地返回不正确的值。",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "官方步骤:\n1. 修改 `mr/worker.go's` 和 `Worker()` to send an RPC to the coordinator 来请求任务\n2. 然后修改coordinator，以尚未启动的 Map 任务的文件名作为回应\n3. 修改 Worker，读取该文件并调用应用程序的 Map 函数，就像 mrsequential.go 中那样\n\n提示：\n1. 改变了mr/目录的话，需要 go build -buildmode=plugin ../mrapps/wc.go \n2. intermediate file命名可以为 mr-X-Y (X是Map task，Y是Reduce task)\n3. 在worker.go中，Map可以用ihash(key)来pick reduce task\n4. mrsequential.go中有如何读Map input file，给intermediate K/V排序，存储Reduce结果\n5. coordinator作为RPC服务器，是并发的，记得锁定共享数据\n6. Workers有时需要等待，因为上一个map结束了reduce才能开始，可能的方法：1) worker定期向coordinator要任务，\n   每次请求之间用 time.Sleep()休眠；2) coordinator中的相关 RPC 处理程序可以使用 time.Sleep() 或 sync.Cond 循环等待。\n7. coordinator无法可靠地区分崩溃的Workers、存活但因故停滞的Workers，以及正在执行但速度太慢而无用的Workers。\n   最好的办法就是让coordinator等待一段时间，然后放弃并将任务重新分配给不同的Workers。在本实验中，\n   让coordinator等待十秒钟；十秒钟后，coordinator应假定Workers已经死亡（当然，也可能没有死亡）。 \n8. 如果您选择执行备份任务（第 3.6 节），请注意我们会测试您的代码是否会在工作者执行任务而不崩溃的情况下\n   安排无关的任务。备份任务只能在一段相对较长的时间（如 10 秒）后安排。\n9. 要测试崩溃恢复，可以使用 mrapps/crash.go 应用程序插件。它会在 Map 和 Reduce 功能中随机退出。\n10. 为了确保没有人会在崩溃时观察到部分写入的文件，MapReduce 论文提到了使用临时文件并在完全写\n   入后原子重命名的技巧。您可以使用 ioutil.TempFile 创建临时文件，并使用 os.Rename 原子重命名临时文件。\n11. test-mr.sh 的所有进程都在 mr-tmp 子目录下运行，因此如果出现问题，需要查看中间文件或输出文件时，\n   可在该目录下查看。请不要同时运行多个 test-mr.sh，使其在测试失败后退出，这样脚本就不会继续测试（并覆盖输出文件）。\n12. Go RPC 只发送名称以大写字母开头的结构体字段。子结构的字段名也必须大写。\n13. 调用 RPC call() 函数时，回复结构应包含所有默认值。RPC 调用应如下所示：\n     reply := SomeType{}\n     call(..., &reply)\n    调用前无需设置 reply 的任何字段。如果您传递的 reply 结构包含非默认字段，RPC 系统可能会无声地返回不正确的值。"
    },
    {
      "id": "WGjOfIZ5_aKuRY4bD8nxG",
      "type": "text",
      "x": 1615.465981163847,
      "y": 291.8950787754523,
      "width": 408.8797302246094,
      "height": 336,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1772532344,
      "version": 745,
      "versionNonce": 2038113400,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "Spa2GrBX3kLsufnpgb-d5",
          "type": "arrow"
        }
      ],
      "updated": 1706971533387,
      "link": null,
      "locked": false,
      "text": "Worker中存储intermediate K/V：\n  enc := json.NewEncoder(file)\n  for _, kv := ... {\n    err := enc.Encode(&kv)\n\n读取：\n  dec := json.NewDecoder(file)\n  for {\n    var kv KeyValue\n    if err := dec.Decode(&kv); err != nil {\n      break\n    }\n    kva = append(kva, kv)\n  }",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Worker中存储intermediate K/V：\n  enc := json.NewEncoder(file)\n  for _, kv := ... {\n    err := enc.Encode(&kv)\n\n读取：\n  dec := json.NewDecoder(file)\n  for {\n    var kv KeyValue\n    if err := dec.Decode(&kv); err != nil {\n      break\n    }\n    kva = append(kva, kv)\n  }"
    },
    {
      "id": "Spa2GrBX3kLsufnpgb-d5",
      "type": "arrow",
      "x": 1290.4981340969266,
      "y": 459.93147234656453,
      "width": 318.9042895669061,
      "height": 0.5122918295439831,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "seed": 821057032,
      "version": 1315,
      "versionNonce": 1251049224,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "VcUP3v_dy4fr1xRrUHyGn"
        }
      ],
      "updated": 1706971533387,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          318.9042895669061,
          0.5122918295439831
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "vtiY7Xc9zV8lOgxrBziCC",
        "focus": -0.01730806106842559,
        "gap": 8.998134096926606
      },
      "endBinding": {
        "elementId": "WGjOfIZ5_aKuRY4bD8nxG",
        "focus": -0.005268514685336254,
        "gap": 6.063557500014213
      },
      "startArrowhead": null,
      "endArrowhead": "arrow"
    },
    {
      "id": "VcUP3v_dy4fr1xRrUHyGn",
      "type": "text",
      "x": 1424.9502788803798,
      "y": 448.1876182613365,
      "width": 50,
      "height": 24,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 385038968,
      "version": 12,
      "versionNonce": 9426296,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1706971533387,
      "link": null,
      "locked": false,
      "text": "读/写",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "Spa2GrBX3kLsufnpgb-d5",
      "originalText": "读/写"
    },
    {
      "id": "E2Z1Dwd1vQXAvaeZ5ApdA",
      "type": "text",
      "x": -681.7736133193857,
      "y": 558.2262648888187,
      "width": 917.7998046875,
      "height": 360,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1848984440,
      "version": 580,
      "versionNonce": 1850190200,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1706972875253,
      "link": null,
      "locked": false,
      "text": "1. Map阶段应将中间键分成多个桶，供 nReduce 减缩任务使用，其中 nReduce 是reduce任务的数量，\n也就是 main/mrcoordinator.go 传递给 MakeCoordinator() 的参数。每个映射器应创建 nReduce \n中间文件，供还原任务使用\n2. Worker 实现应将第 X 个还原任务的输出放到 mr-out-X 文件中\n3. mr-out-X 文件应包含每个 Reduce 函数输出的一行。这一行应该以 Go 的\"%v %v \"格式生成，\n并以键和值调用。请查看 main/mrsequential.go 中注释为 \"this is the correct format \"的一行。\n如果您的实现与此格式偏差过大，测试脚本就会失败。\n4. Worker 应将intermediate Map output放到当前目录下的文件中，这样 Worker 就能将其作为 \nReduce 任务的输入进行读取。\n5. main/mrcoordinator.go 希望 mr/coordinator.go 实现一个 Done() 方法，当 MapReduce \n任务完全完成时返回 true；此时，mrcoordinator.go 将退出。\n6. 任务完全完成后，worker进程应退出。实现这一点的一个简单方法是使用 call() 的返回值：如果\nworker无法联系coordinator ，它可以认为coordinator 已经退出，因为工作已经完成，所以worker\n也可以终止。根据您的设计，取决于你的设计，coordinator 向worker下达一个 \"please exit \"的\n伪任务也很有帮助。",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "1. Map阶段应将中间键分成多个桶，供 nReduce 减缩任务使用，其中 nReduce 是reduce任务的数量，\n也就是 main/mrcoordinator.go 传递给 MakeCoordinator() 的参数。每个映射器应创建 nReduce \n中间文件，供还原任务使用\n2. Worker 实现应将第 X 个还原任务的输出放到 mr-out-X 文件中\n3. mr-out-X 文件应包含每个 Reduce 函数输出的一行。这一行应该以 Go 的\"%v %v \"格式生成，\n并以键和值调用。请查看 main/mrsequential.go 中注释为 \"this is the correct format \"的一行。\n如果您的实现与此格式偏差过大，测试脚本就会失败。\n4. Worker 应将intermediate Map output放到当前目录下的文件中，这样 Worker 就能将其作为 \nReduce 任务的输入进行读取。\n5. main/mrcoordinator.go 希望 mr/coordinator.go 实现一个 Done() 方法，当 MapReduce \n任务完全完成时返回 true；此时，mrcoordinator.go 将退出。\n6. 任务完全完成后，worker进程应退出。实现这一点的一个简单方法是使用 call() 的返回值：如果\nworker无法联系coordinator ，它可以认为coordinator 已经退出，因为工作已经完成，所以worker\n也可以终止。根据您的设计，取决于你的设计，coordinator 向worker下达一个 \"please exit \"的\n伪任务也很有帮助。"
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}